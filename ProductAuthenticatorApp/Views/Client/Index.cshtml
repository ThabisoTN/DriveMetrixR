@model IEnumerable<ProductAuthenticatorApp.Data.Vehicle>
@{
    ViewData["Title"] = "Available Vehicles";
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
<style>
    :root {
        --primary: #2563eb;
        --primary-dark: #1d4ed8;
        --secondary: #f59e0b;
        --dark: #1e293b;
        --light: #f8fafc;
        --gray: #94a3b8;
    }

    .vehicles-container {
        max-width: 1200px;
        margin: 2rem auto;
        padding: 0 1rem;
    }

    .page-header {
        text-align: center;
        margin-bottom: 2rem;
    }

    .page-title {
        color: var(--primary);
        font-weight: 700;
        font-size: 2rem;
        margin-bottom: 0.5rem;
    }

    .page-subtitle {
        color: var(--gray);
        font-size: 1.1rem;
    }

    .vehicle-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 1.5rem;
        margin-top: 2rem;
    }

    .vehicle-card {
        background-color: white;
        border-radius: 12px;
        overflow: hidden;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
        border: 1px solid #e2e8f0;
    }

        .vehicle-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

    .vehicle-image {
        height: 200px;
        position: relative;
        overflow: hidden;
    }

        .vehicle-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
            transition: transform 0.5s ease;
        }

    .vehicle-card:hover .vehicle-image img {
        transform: scale(1.05);
    }

    .no-image {
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: #f1f5f9;
        color: var(--gray);
        font-size: 3rem;
    }

    .vehicle-badge {
        position: absolute;
        top: 1rem;
        right: 1rem;
        background-color: rgba(37, 99, 235, 0.9);
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .vehicle-details {
        padding: 1.5rem;
    }

    .vehicle-make-model {
        font-size: 1.2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
        color: var(--dark);
    }

    .vehicle-specs {
        display: flex;
        gap: 1rem;
        margin-bottom: 0.8rem;
        font-size: 0.9rem;
        color: var(--gray);
    }

        .vehicle-specs span {
            display: flex;
            align-items: center;
        }

        .vehicle-specs i {
            margin-right: 0.3rem;
            font-size: 0.8rem;
        }

    .vehicle-price {
        font-size: 1.1rem;
        font-weight: 700;
        color: var(--primary);
        margin-bottom: 1rem;
    }

    .vehicle-location {
        display: flex;
        align-items: center;
        font-size: 0.9rem;
        color: var(--gray);
        margin-bottom: 1.2rem;
    }

        .vehicle-location i {
            margin-right: 0.5rem;
        }

    .view-details {
        display: block;
        text-align: center;
        padding: 0.7rem;
        background-color: var(--primary);
        color: white;
        text-decoration: none;
        font-weight: 600;
        border-radius: 6px;
        transition: background-color 0.3s ease;
    }

        .view-details:hover {
            background-color: var(--primary-dark);
        }

    /* Search and filter controls */
    .vehicle-controls {
        display: flex;
        justify-content: space-between;
        margin-bottom: 2rem;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .search-container {
        display: flex;
        align-items: center;
        background-color: var(--light);
        border-radius: 50px;
        padding: 0.5rem 1rem;
        width: 300px;
        border: 1px solid #e2e8f0;
    }

        .search-container input {
            border: none;
            background: transparent;
            padding: 0.5rem;
            width: 100%;
            outline: none;
        }

        .search-container button {
            background: transparent;
            border: none;
            color: var(--gray);
            cursor: pointer;
        }

    .filter-dropdown {
        padding: 0.5rem 1rem;
        border-radius: 6px;
        border: 1px solid #e2e8f0;
        background-color: white;
    }

    /* Responsive adjustments */
    @@media (max-width: 768px) {
        .vehicle-grid {
            grid-template-columns: 1fr;
        }

        .vehicle-controls {
            flex-direction: column;
        }

        .search-container {
            width: 100%;
        }
    }
</style>

<div class="vehicles-container">
    <div class="page-header">
        <h1 class="page-title">Available Leasing Vehicles</h1>
        <p class="page-subtitle">Browse our premium selection of vehicles available for lease</p>
    </div>

    <div class="vehicle-controls">
        <div class="search-container">
            <input type="text" placeholder="Search vehicles..." id="searchInput">
            <button type="submit"><i class="fas fa-search"></i></button>
        </div>
        <select class="filter-dropdown" id="filterDropdown">
            <option value="">All Vehicles</option>
            <option value="sedan">Sedan</option>
            <option value="suv">SUV</option>
            <option value="truck">Truck</option>
            <option value="luxury">Luxury</option>
        </select>
    </div>

    <div class="vehicle-grid">
        @foreach (var vehicle in Model)
        {
            <div class="vehicle-card">
                <div class="vehicle-image">
                    @if (!string.IsNullOrEmpty(vehicle.ImagePath))
                    {
                        <img src="@vehicle.ImagePath" alt="@vehicle.Make @vehicle.Model">
                    }
                    else
                    {
                        <div class="no-image">
                            <i class="fas fa-car"></i>
                        </div>
                    }
                    <span class="vehicle-badge">@vehicle.Year</span>
                </div>

                <div class="vehicle-details">
                    <h3 class="vehicle-make-model">@vehicle.Make @vehicle.Model</h3>

        

                    <div class="vehicle-price">@vehicle.LeasingPrice.ToString("C")<span style="font-size: 0.8rem; color: var(--gray);">/month</span></div>

                    <div class="vehicle-location">
                        <i class="fas fa-map-marker-alt"></i> @vehicle.Branch?.Name
                    </div>

                    <a href="@Url.Action("ViewVehicle", "Vehicle", new { vehicleId = vehicle.VehicleId })" class="view-details">
                        View Details <i class="fas fa-chevron-right"></i>
                    </a>
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <script>
        // Simple client-side search and filter functionality
        document.addEventListener('DOMContentLoaded', function() {
            const searchInput = document.getElementById('searchInput');
            const filterDropdown = document.getElementById('filterDropdown');
            const vehicleCards = document.querySelectorAll('.vehicle-card');

            function filterVehicles() {
                const searchTerm = searchInput.value.toLowerCase();
                const filterValue = filterDropdown.value.toLowerCase();

                vehicleCards.forEach(card => {
                    const text = card.textContent.toLowerCase();
                    const matchesSearch = text.includes(searchTerm);
                    const matchesFilter = filterValue === '' || text.includes(filterValue);

                    if (matchesSearch && matchesFilter) {
                        card.style.display = 'block';
                    } else {
                        card.style.display = 'none';
                    }
                });
            }

            searchInput.addEventListener('input', filterVehicles);
            filterDropdown.addEventListener('change', filterVehicles);
        });
    </script>
}